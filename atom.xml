<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://Yuririns.github.io/"/>
  <updated>2019-03-16T08:24:40.254Z</updated>
  <id>http://Yuririns.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>XSS Challenges</title>
    <link href="http://Yuririns.github.io/2019/03/16/XSS-Challenges/"/>
    <id>http://Yuririns.github.io/2019/03/16/XSS-Challenges/</id>
    <published>2019-03-16T02:56:15.000Z</published>
    <updated>2019-03-16T08:24:40.254Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Stage-1"><a href="#Stage-1" class="headerlink" title="Stage #1"></a>Stage #1</h3><pre><code>1&quot;&lt;/b&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt;</code></pre><p><img src="/pic/XSS-Challenges/1-1.png" alt="image"><br>弹框：<img src="/pic/XSS-Challenges/1-2.png" alt="image"><br><br></p><h3 id="Stage-2"><a href="#Stage-2" class="headerlink" title="Stage #2"></a>Stage #2</h3><pre><code>1&quot;/&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt;</code></pre><p><img src="/pic/XSS-Challenges/2-1.png" alt="image"><br><br></p><h3 id="Stage-3"><a href="#Stage-3" class="headerlink" title="Stage #3"></a>Stage #3</h3><p>输入：<code>&lt;/b&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt;</code>发现转义了&lt;&gt;<br><img src="/pic/XSS-Challenges/3-1.png" alt="image"><br>抓包修改第二个参数：<br><img src="/pic/XSS-Challenges/3-2.png" alt="image"><br><img src="/pic/XSS-Challenges/3-3.png" alt="image"><br>弹窗:<img src="/pic/XSS-Challenges/3-4.png" alt="image"><br><br></p><h3 id="Stage-4"><a href="#Stage-4" class="headerlink" title="Stage #4"></a>Stage #4</h3><p>和3一样转义了&lt;&gt;，以及这次第二个参数也转义了&lt;&gt;抓包发现有第三个参数，修改这个参数的值：<br><img src="/pic/XSS-Challenges/4-2.png" alt="image"><br>弹窗:<img src="/pic/XSS-Challenges/4-1.png" alt="image"><br><br></p><h3 id="Stage-5"><a href="#Stage-5" class="headerlink" title="Stage #5"></a>Stage #5</h3><p>输入框限制了内容的长度，F12修改maxlength，直接在后面补了个零：<br><img src="/pic/XSS-Challenges/5-1.png" alt="image"></p><pre><code>1&quot;/&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt;</code></pre><p><img src="/pic/XSS-Challenges/5-2.png" alt="image"><br><br></p><h3 id="Stage-6"><a href="#Stage-6" class="headerlink" title="Stage #6"></a>Stage #6</h3><p>同样转义了&lt;&gt;，并且没有别的参数了<br>Hint: event handler attributes<br>搜了一下发现是需要利用HTML 事件属性</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center">onload</td><td style="text-align:center">script</td><td style="text-align:center">页面结束加载之后触发。</td></tr><tr><td style="text-align:center">onclick</td><td style="text-align:center">script</td><td style="text-align:center">元素上发生鼠标点击时触发。</td></tr><tr><td style="text-align:center">onmousemove</td><td style="text-align:center">script</td><td style="text-align:center">当鼠标指针移动到元素上时触发。</td></tr><tr><td style="text-align:center">onmouseover</td><td style="text-align:center">script</td><td style="text-align:center">当鼠标指针移动到元素上时触发。</td></tr></tbody></table><pre><code>&quot; onclick=&quot;alert(document.domain);</code></pre><p>然后点击输入框，弹出<br><img src="/pic/XSS-Challenges/6-1.png" alt="image"><br><br></p><h3 id="Stage-7"><a href="#Stage-7" class="headerlink" title="Stage #7"></a>Stage #7</h3><p>输入<code>1&quot; onclick=&quot;alert(document.domain);</code>后发现<br><code>&lt;input name=&quot;p1&quot; size=&quot;50&quot; value=&quot;1&amp;quot;&quot; onclick=&quot;&amp;quot;alert(document.domain);&quot; type=&quot;text&quot;&gt;</code></p><p>空格分割属性</p><pre><code>1&quot; onclick=alert(document.domain);</code></pre><p><code>&lt;input name=&quot;p1&quot; size=&quot;50&quot; value=&quot;1&amp;quot;&quot; onclick=&quot;alert(document.domain);&quot; type=&quot;text&quot;&gt;</code><br>点击输入框，弹出<br><img src="/pic/XSS-Challenges/7-1.png" alt="image"><br><br></p><h3 id="Stage-8"><a href="#Stage-8" class="headerlink" title="Stage #8"></a>Stage #8</h3><p>随便输入一个123，发现会产生一个a标签的跳转链接：<br><img src="/pic/XSS-Challenges/8-1.png" alt="image"><br>使用JavaScript中的伪协议（javascript:）</p><pre><code>javascript:alert(document.domain);</code></pre><p>点击生成的URL，弹出<br><img src="/pic/XSS-Challenges/8-2.png" alt="image"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Stage-1&quot;&gt;&lt;a href=&quot;#Stage-1&quot; class=&quot;headerlink&quot; title=&quot;Stage #1&quot;&gt;&lt;/a&gt;Stage #1&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;1&amp;quot;&amp;lt;/b&amp;gt;&amp;lt;script&amp;gt;alert(doc
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>AES加密</title>
    <link href="http://Yuririns.github.io/2018/08/21/AES%E5%8A%A0%E5%AF%86/"/>
    <id>http://Yuririns.github.io/2018/08/21/AES加密/</id>
    <published>2018-08-21T05:47:50.000Z</published>
    <updated>2019-03-16T08:28:07.147Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">SubBytes</span><span class="params">(inputt)</span>:</span></div><div class="line">    out_ = [[<span class="string">'*'</span><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>)]<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>)]</div><div class="line">    map_ = [<span class="number">0x63</span>,<span class="number">0x7c</span>,<span class="number">0x77</span>,<span class="number">0x7b</span>,<span class="number">0xf2</span>,<span class="number">0x6b</span>,<span class="number">0x6f</span>,<span class="number">0xc5</span>,<span class="number">0x30</span>,<span class="number">0x01</span>,<span class="number">0x67</span>,<span class="number">0x2b</span>,<span class="number">0xfe</span>,<span class="number">0xd7</span>,<span class="number">0xab</span>,<span class="number">0x76</span>,    </div><div class="line">        <span class="number">0xca</span>,<span class="number">0x82</span>,<span class="number">0xc9</span>,<span class="number">0x7d</span>,<span class="number">0xfa</span>,<span class="number">0x59</span>,<span class="number">0x47</span>,<span class="number">0xf0</span>,<span class="number">0xad</span>,<span class="number">0xd4</span>,<span class="number">0xa2</span>,<span class="number">0xaf</span>,<span class="number">0x9c</span>,<span class="number">0xa4</span>,<span class="number">0x72</span>,<span class="number">0xc0</span>, </div><div class="line">        <span class="number">0xb7</span>,<span class="number">0xfd</span>,<span class="number">0x93</span>,<span class="number">0x26</span>,<span class="number">0x36</span>,<span class="number">0x3f</span>,<span class="number">0xf7</span>,<span class="number">0xcc</span>,<span class="number">0x34</span>,<span class="number">0xa5</span>,<span class="number">0xe5</span>,<span class="number">0xf1</span>,<span class="number">0x71</span>,<span class="number">0xd8</span>,<span class="number">0x31</span>,<span class="number">0x15</span>,   </div><div class="line">        <span class="number">0x04</span>,<span class="number">0xc7</span>,<span class="number">0x23</span>,<span class="number">0xc3</span>,<span class="number">0x18</span>,<span class="number">0x96</span>,<span class="number">0x05</span>,<span class="number">0x9a</span>,<span class="number">0x07</span>,<span class="number">0x12</span>,<span class="number">0x80</span>,<span class="number">0xe2</span>,<span class="number">0xeb</span>,<span class="number">0x27</span>,<span class="number">0xb2</span>,<span class="number">0x75</span>,   </div><div class="line">        <span class="number">0x09</span>,<span class="number">0x83</span>,<span class="number">0x2c</span>,<span class="number">0x1a</span>,<span class="number">0x1b</span>,<span class="number">0x6e</span>,<span class="number">0x5a</span>,<span class="number">0xa0</span>,<span class="number">0x52</span>,<span class="number">0x3b</span>,<span class="number">0xd6</span>,<span class="number">0xb3</span>,<span class="number">0x29</span>,<span class="number">0xe3</span>,<span class="number">0x2f</span>,<span class="number">0x84</span>,   </div><div class="line">        <span class="number">0x53</span>,<span class="number">0xd1</span>,<span class="number">0x00</span>,<span class="number">0xed</span>,<span class="number">0x20</span>,<span class="number">0xfc</span>,<span class="number">0xb1</span>,<span class="number">0x5b</span>,<span class="number">0x6a</span>,<span class="number">0xcb</span>,<span class="number">0xbe</span>,<span class="number">0x39</span>,<span class="number">0x4a</span>,<span class="number">0x4c</span>,<span class="number">0x58</span>,<span class="number">0xcf</span>,  </div><div class="line">        <span class="number">0xd0</span>,<span class="number">0xef</span>,<span class="number">0xaa</span>,<span class="number">0xfb</span>,<span class="number">0x43</span>,<span class="number">0x4d</span>,<span class="number">0x33</span>,<span class="number">0x85</span>,<span class="number">0x45</span>,<span class="number">0xf9</span>,<span class="number">0x02</span>,<span class="number">0x7f</span>,<span class="number">0x50</span>,<span class="number">0x3c</span>,<span class="number">0x9f</span>,<span class="number">0xa8</span>,  </div><div class="line">        <span class="number">0x51</span>,<span class="number">0xa3</span>,<span class="number">0x40</span>,<span class="number">0x8f</span>,<span class="number">0x92</span>,<span class="number">0x9d</span>,<span class="number">0x38</span>,<span class="number">0xf5</span>,<span class="number">0xbc</span>,<span class="number">0xb6</span>,<span class="number">0xda</span>,<span class="number">0x21</span>,<span class="number">0x10</span>,<span class="number">0xff</span>,<span class="number">0xf3</span>,<span class="number">0xd2</span>,   </div><div class="line">        <span class="number">0xcd</span>,<span class="number">0x0c</span>,<span class="number">0x13</span>,<span class="number">0xec</span>,<span class="number">0x5f</span>,<span class="number">0x97</span>,<span class="number">0x44</span>,<span class="number">0x17</span>,<span class="number">0xc4</span>,<span class="number">0xa7</span>,<span class="number">0x7e</span>,<span class="number">0x3d</span>,<span class="number">0x64</span>,<span class="number">0x5d</span>,<span class="number">0x19</span>,<span class="number">0x73</span>,    </div><div class="line">        <span class="number">0x60</span>,<span class="number">0x81</span>,<span class="number">0x4f</span>,<span class="number">0xdc</span>,<span class="number">0x22</span>,<span class="number">0x2a</span>,<span class="number">0x90</span>,<span class="number">0x88</span>,<span class="number">0x46</span>,<span class="number">0xee</span>,<span class="number">0xb8</span>,<span class="number">0x14</span>,<span class="number">0xde</span>,<span class="number">0x5e</span>,<span class="number">0x0b</span>,<span class="number">0xdb</span>, </div><div class="line">        <span class="number">0xe0</span>,<span class="number">0x32</span>,<span class="number">0x3a</span>,<span class="number">0x0a</span>,<span class="number">0x49</span>,<span class="number">0x06</span>,<span class="number">0x24</span>,<span class="number">0x5c</span>,<span class="number">0xc2</span>,<span class="number">0xd3</span>,<span class="number">0xac</span>,<span class="number">0x62</span>,<span class="number">0x91</span>,<span class="number">0x95</span>,<span class="number">0xe4</span>,<span class="number">0x79</span>,   </div><div class="line">        <span class="number">0xe7</span>,<span class="number">0xc8</span>,<span class="number">0x37</span>,<span class="number">0x6d</span>,<span class="number">0x8d</span>,<span class="number">0xd5</span>,<span class="number">0x4e</span>,<span class="number">0xa9</span>,<span class="number">0x6c</span>,<span class="number">0x56</span>,<span class="number">0xf4</span>,<span class="number">0xea</span>,<span class="number">0x65</span>,<span class="number">0x7a</span>,<span class="number">0xae</span>,<span class="number">0x08</span>,   </div><div class="line">        <span class="number">0xba</span>,<span class="number">0x78</span>,<span class="number">0x25</span>,<span class="number">0x2e</span>,<span class="number">0x1c</span>,<span class="number">0xa6</span>,<span class="number">0xb4</span>,<span class="number">0xc6</span>,<span class="number">0xe8</span>,<span class="number">0xdd</span>,<span class="number">0x74</span>,<span class="number">0x1f</span>,<span class="number">0x4b</span>,<span class="number">0xbd</span>,<span class="number">0x8b</span>,<span class="number">0x8a</span>,  </div><div class="line">        <span class="number">0x70</span>,<span class="number">0x3e</span>,<span class="number">0xb5</span>,<span class="number">0x66</span>,<span class="number">0x48</span>,<span class="number">0x03</span>,<span class="number">0xf6</span>,<span class="number">0x0e</span>,<span class="number">0x61</span>,<span class="number">0x35</span>,<span class="number">0x57</span>,<span class="number">0xb9</span>,<span class="number">0x86</span>,<span class="number">0xc1</span>,<span class="number">0x1d</span>,<span class="number">0x9e</span>,   </div><div class="line">        <span class="number">0xe1</span>,<span class="number">0xf8</span>,<span class="number">0x98</span>,<span class="number">0x11</span>,<span class="number">0x69</span>,<span class="number">0xd9</span>,<span class="number">0x8e</span>,<span class="number">0x94</span>,<span class="number">0x9b</span>,<span class="number">0x1e</span>,<span class="number">0x87</span>,<span class="number">0xe9</span>,<span class="number">0xce</span>,<span class="number">0x55</span>,<span class="number">0x28</span>,<span class="number">0xdf</span>,   </div><div class="line">        <span class="number">0x8c</span>,<span class="number">0xa1</span>,<span class="number">0x89</span>,<span class="number">0x0d</span>,<span class="number">0xbf</span>,<span class="number">0xe6</span>,<span class="number">0x42</span>,<span class="number">0x68</span>,<span class="number">0x41</span>,<span class="number">0x99</span>,<span class="number">0x2d</span>,<span class="number">0x0f</span>,<span class="number">0xb0</span>,<span class="number">0x54</span>,<span class="number">0xbb</span>,<span class="number">0x16</span>]</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</div><div class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">4</span>):            </div><div class="line">            out_[i][j] =map_[inputt[i][j]]</div><div class="line">    <span class="keyword">return</span> out_</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ShiftRows</span><span class="params">(inputt)</span>:</span></div><div class="line">    </div><div class="line">    out = [[<span class="string">'*'</span><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>)]<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>)]  </div><div class="line"></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</div><div class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">4</span>):</div><div class="line">            out[i][j-i] = inputt[i][j]</div><div class="line">    <span class="keyword">return</span> out</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">MixColumns</span><span class="params">(inputt)</span>:</span></div><div class="line">    col = [[<span class="number">0x02</span>,<span class="number">0x03</span>,<span class="number">0x01</span>,<span class="number">0x01</span>],[<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x03</span>,<span class="number">0x01</span>],[<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x03</span>],[<span class="number">0x03</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x02</span>]]</div><div class="line">    out = [[<span class="string">'*'</span><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>)]<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>)]</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</div><div class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">4</span>):</div><div class="line">            out[i][j]=Mult(inputt[<span class="number">0</span>][j],col[i][<span class="number">0</span>])^Mult(inputt[<span class="number">1</span>][j],col[i][<span class="number">1</span>])^Mult(inputt[<span class="number">2</span>][j],col[i][<span class="number">2</span>])^Mult(inputt[<span class="number">3</span>][j],col[i][<span class="number">3</span>])</div><div class="line">    <span class="keyword">return</span> out</div><div class="line">    </div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">Mult</span><span class="params">(a,b)</span>:</span></div><div class="line">    temp = [<span class="string">''</span>]*<span class="number">8</span></div><div class="line">    temp[<span class="number">0</span>]=int(a)</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">7</span>):</div><div class="line">        <span class="keyword">if</span> temp[i]&lt;<span class="number">128</span>:</div><div class="line">            temp[i+<span class="number">1</span>] = temp[i]&lt;&lt;<span class="number">1</span>  <span class="comment">#若小于0b10000000则直接右移</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            temp[i+<span class="number">1</span>] = ((temp[i]&lt;&lt;<span class="number">1</span>)<span class="number">-0x100</span>)^<span class="number">0x1B</span></div><div class="line">    mult = <span class="number">0x00</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">8</span>):</div><div class="line">        mult ^= (b&gt;&gt;i&amp;<span class="number">1</span>)*temp[i]</div><div class="line">    <span class="keyword">return</span> mult</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">AddRoundKey</span><span class="params">(input_)</span>:</span></div><div class="line">    key = [[<span class="number">0xa0</span>,<span class="number">0xfa</span>,<span class="number">0xfe</span>,<span class="number">0x17</span>],[<span class="number">0x88</span>,<span class="number">0x54</span>,<span class="number">0x2c</span>,<span class="number">0xb1</span>],[<span class="number">0x23</span>,<span class="number">0xa3</span>,<span class="number">0x39</span>,<span class="number">0x39</span>],[<span class="number">0x2a</span>,<span class="number">0x6c</span>,<span class="number">0x76</span>,<span class="number">0x05</span>]]</div><div class="line">    temp = [[<span class="string">'*'</span><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>)]<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>)]</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</div><div class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">4</span>):</div><div class="line">            temp[i][j] = hex(key[i][j]^input_[i][j])</div><div class="line">    <span class="keyword">return</span> temp</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment">#inputt = [[0xF5,0x56,0x10,0x20],[0x6B,0x44,0x57,0x39],[0x01,0x03,0x6C,0x21],[0xAF,0x30,0x32,0x34]]</span></div><div class="line">    inputt = [[<span class="number">0x2b</span>,<span class="number">0x7e</span>,<span class="number">0x15</span>,<span class="number">0x16</span>],[<span class="number">0x28</span>,<span class="number">0xae</span>,<span class="number">0xd2</span>,<span class="number">0xa6</span>],[<span class="number">0xab</span>,<span class="number">0xf7</span>,<span class="number">0x15</span>,<span class="number">0x88</span>],[<span class="number">0x09</span>,<span class="number">0xcf</span>,<span class="number">0x4f</span>,<span class="number">0x3c</span>]]</div><div class="line">    <span class="comment">#outt = SubBytes(inputt)</span></div><div class="line">    <span class="comment">#out = ShiftRows(SubBytes(inputt))</span></div><div class="line">    outtt = MixColumns(ShiftRows(SubBytes(inputt)))</div><div class="line">    out = AddRoundKey(outtt)</div><div class="line">    print(out) </div><div class="line">    </div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/d
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>pytorch安装</title>
    <link href="http://Yuririns.github.io/2018/08/07/pytorch%E5%AE%89%E8%A3%85/"/>
    <id>http://Yuririns.github.io/2018/08/07/pytorch安装/</id>
    <published>2018-08-07T06:44:54.000Z</published>
    <updated>2018-08-07T07:29:29.546Z</updated>
    
    <content type="html"><![CDATA[<p>环境为win8.1+python3.6.2<br>这里选择通过Python3.6+pip安装gpu版本pytorch</p><p>首先要先安装cuda：<a href="https://developer.nvidia.com/cuda-downloadstarget_os=Windows&amp;target_arch=x86_64" target="_blank" rel="external">cuda下载地址</a></p><p>根据自己的系统选择相对应的版本：<br><img src="/pic/pytorch安装/1.png" alt="image"></p><p>下载cuDNN库：<a href="https://developer.nvidia.com/cudnn" target="_blank" rel="external">cuDNN库下载地址</a><br>需要注册并且填写一个问卷<br><img src="/pic/pytorch安装/2.png" alt="image"><br>然鹅！！！<br>好不容易填写完问卷之后，我发现cuDNN下载只提供了win7和win10的_(:3J∠)_<br><img src="/pic/pytorch安装/3.png" alt="image"><br>然后win8的我放弃了这一步</p><p>安装完毕后测试安装结果<br>打开命令提示符，输入：nvcc -V<br>结果如下：<br><img src="/pic/pytorch安装/4.png" alt="image"></p><p>接下来安装pytorch：<br>下载：<a href="https://pan.baidu.com/s/1dF6ayLr#list/path=%2Fpytorch" target="_blank" rel="external">pytorch</a><br>由于我的环境为：win8.1+python3.6.2+cuda8.0<br>所以选择下载：<br><img src="/pic/pytorch安装/5.png" alt="image"><br>这里可供选择的两个whl文件都是要求64位Python的，由于我之前安装的Python3.6是32位的还卸载了重新安装了64位_(:3J∠)_</p><p>下载后通过pip安装whl文件<br>安装完成后测试：<br><img src="/pic/pytorch安装/6.png" alt="image"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;环境为win8.1+python3.6.2&lt;br&gt;这里选择通过Python3.6+pip安装gpu版本pytorch&lt;/p&gt;
&lt;p&gt;首先要先安装cuda：&lt;a href=&quot;https://developer.nvidia.com/cuda-downloadstarget_o
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>map函数和lambda函数</title>
    <link href="http://Yuririns.github.io/2018/08/03/map%E5%87%BD%E6%95%B0/"/>
    <id>http://Yuririns.github.io/2018/08/03/map函数/</id>
    <published>2018-08-03T05:36:51.000Z</published>
    <updated>2018-08-03T07:38:56.637Z</updated>
    
    <content type="html"><![CDATA[<p>在之前写AES加密算法的代码时，发现map函数在2.x版本和3.x版本中用法有点不同：</p><blockquote><p>Python 2.x 返回列表。<br>Python 3.x 返回迭代器。</p></blockquote><p>在3.x的版本中mao()函数返回的是迭代器，所以需要使用list()函数使其返回正常列表：<br><img src="/pic/map函数/1.png" alt="image"></p><p>以及在2.x版本中可以使用下面①的方法实现输出<br>[(1*2),(3*2),(2*3),(4*8)]:<br><img src="/pic/map函数/2.png" alt="image"><br>而在3.x版本中无法识别 lambda(a,b) 所以使用②的方法：lambda x: x[0]*x[1]</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在之前写AES加密算法的代码时，发现map函数在2.x版本和3.x版本中用法有点不同：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Python 2.x 返回列表。&lt;br&gt;Python 3.x 返回迭代器。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在3.x的版本中mao()函
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>跳一跳学adb</title>
    <link href="http://Yuririns.github.io/2018/02/25/%E8%B7%B3%E4%B8%80%E8%B7%B3java%E5%8D%8A%E8%87%AA%E5%8A%A8%E5%88%B7%E5%88%86/"/>
    <id>http://Yuririns.github.io/2018/02/25/跳一跳java半自动刷分/</id>
    <published>2018-02-25T02:58:51.000Z</published>
    <updated>2018-02-25T04:09:21.064Z</updated>
    
    <content type="html"><![CDATA[<p>之前看到一个大佬写的java的跳一跳半自动刷分代码，然后大概研究了一下<br>代码：<a href="https://github.com/fourbrother/WXJumpGameUtils" target="_blank" rel="external">click me</a></p><p>原理主要是用到了两个adb命令：</p><blockquote><p>adb shell screencap 截屏操作<br>adb shell input text 模拟滑动事件</p></blockquote><p>先在电脑上配置号android的adb环境变量<br>配置好了之后手机连上数据线，选择USB调试模式，测试一下通过adb命令截图</p><p><code>adb shell /system/bin/screencap -p /sdcard/1/screenshot.png（将截图保存到SDCard下文件夹1里）</code><br><code>adb pull /sdcard/screenshot.png e:/1/screenshot.png（将手机里的截图保存到电脑e盘下文件夹1里）</code><br><img src="/pic/2_1.png" alt="image"><br>可以看到E盘下多了一个图片文件<br><img src="/pic/2_2.png" alt="image"></p><p>而另一个adb命令是：<br><code>adb shell input touchscreen swipe x1 y1 x2 y2 time</code><br>这个命令是在模拟滑动事件，从（x1,y1）经历time（时间）滑动到（x2,y2）</p><p><code>adb shell input touchscreen swipe 170 180 200 200 300（从（170,180）经历200毫秒滑动到（200,200））</code></p><p>而当（x1,y1）和（x2,y2）相同的特殊情况可以达到模拟长按的效果</p><p><code>adb shell input touchscreen swipe 170 180 170 180 3000（长按3000毫秒）</code></p><p>在运行大佬的java代码时，我发现在eclipse中运行代码中的adb命令没有效果，测试截图也没有截图（cmd命令窗口下能正常使用adb命令）<br>后来查了一下发现要把adb的exe程序和两个动态链接库dll拷贝到C盘两个目录下<br>将下面图片上选中的三个文件<br><img src="/pic/2_4.png" alt="image"><br>拷贝到：<br>C:\Windows\System32<br>C:\Windows\SysWOW64<br>这两个文件夹中<br>然后就能成功运行啦~<br><img src="/pic/2_3.png" alt="image"></p><p>在中途切出去想切首歌也被截到了2333<br><img src="/pic/2_3.jpg" alt="image"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前看到一个大佬写的java的跳一跳半自动刷分代码，然后大概研究了一下&lt;br&gt;代码：&lt;a href=&quot;https://github.com/fourbrother/WXJumpGameUtils&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;click m
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CVE-2017-12615漏洞复现</title>
    <link href="http://Yuririns.github.io/2018/02/23/CVE-2017-12615%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <id>http://Yuririns.github.io/2018/02/23/CVE-2017-12615漏洞复现/</id>
    <published>2018-02-23T09:04:35.000Z</published>
    <updated>2018-02-25T04:09:19.209Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CVE-2017-12615漏洞复现"><a href="#CVE-2017-12615漏洞复现" class="headerlink" title="CVE-2017-12615漏洞复现"></a>CVE-2017-12615漏洞复现</h1><hr><h3 id="1-漏洞背景"><a href="#1-漏洞背景" class="headerlink" title="1.漏洞背景"></a>1.漏洞背景</h3><p>Tomcat如果开启PUT方法支持则可能存在远程代码执行漏洞，漏洞编号为CVE-2017-12615的漏洞。攻击者可以在使用漏洞上传JSP文件，从而导致远程代码执行。此漏洞影响Windows平台下的Apache Tomcat 7.x版本，目前已经在Apache Tomcat 7.0.81中修复。</p><h3 id="2-环境配置和相关说明"><a href="#2-环境配置和相关说明" class="headerlink" title="2.环境配置和相关说明"></a>2.环境配置和相关说明</h3><ul><li>Windows 7</li><li>配置jdk环境</li><li>Tomcat ，版本为7.0.55</li><li>burpsuite</li></ul><p>安装tomcat，这里安装的版本为7.0.55<br><img src="/pic/1_1.png" alt="image"><br>修改Tomcat的conf下的web.xml配置文件<br>添加readonly设置为false时的情况(添加以下代码)</p><p><code>&lt;init-param&gt;</code><br><code>&lt;param-name&gt;readonly&lt;/param-name&gt;</code><br><code>&lt;param-value&gt;false&lt;/param-value&gt;</code><br><code>&lt;/init-param&gt;</code></p><p>打开burpsuite进行抓包，在抓包前修改burp代理的默认端口，设置为8008<br>同样地，在浏览器的代理处也设置为127.0.0.1:8008<br><img src="/pic/1_2.png" alt="image"><br>开启代理后刷新web页面进行抓包<br><img src="/pic/1_3.png" alt="image"><br>将GET / HTTP/1.1改成 PUT /1.jsp/ HTTP/1.1<br><img src="/pic/1_4.png" alt="image"><br>然后点击forward<br>浏览器回显是201，说明写入成功<br>来到webapps/ROOT目录下可以看到确实写入成功<br><img src="/pic/1_5.png" alt="image"><br>文件上传成功<br>当时是室友工程实践出问题了，我帮她找问题的时候把这个漏洞复现了一遍，完成的比较简单_(:3J∠)_<br>最后应该还要传一句话木马然后连菜刀的_(:3J∠)_</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CVE-2017-12615漏洞复现&quot;&gt;&lt;a href=&quot;#CVE-2017-12615漏洞复现&quot; class=&quot;headerlink&quot; title=&quot;CVE-2017-12615漏洞复现&quot;&gt;&lt;/a&gt;CVE-2017-12615漏洞复现&lt;/h1&gt;&lt;hr&gt;
&lt;h3 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>emmmmm</title>
    <link href="http://Yuririns.github.io/2017/10/02/hello-world/"/>
    <id>http://Yuririns.github.io/2017/10/02/hello-world/</id>
    <published>2017-10-02T08:56:34.894Z</published>
    <updated>2018-02-25T04:06:07.228Z</updated>
    
    <content type="html"><![CDATA[<p>23333</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;23333&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
</feed>
